{"version":3,"file":"static/js/481.f8d5ead8.chunk.js","mappings":"qNACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA4F,6B,SCE7E,SAASA,EAAT,GAAmE,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC3DC,EAAc,IAAIC,KAAKH,GACvBI,EAAe,IAAID,KAAKF,GAC9B,OACE,iCACE,eAAII,UAAWC,EAAf,SAA6BR,KAC7B,cAAGO,UAAWC,EAAd,SAA4BP,KAC5B,eAAGM,UAAWC,EAAd,sBAAwCJ,EAAYK,iBAApD,oBAAuFH,EAAaG,uB,kCCT1G,EAAuB,sBAAvB,EAAoD,sBCMrC,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBR,GACnBS,MAAK,SAAAC,GACJN,EAAWM,MAEZC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,CAACZ,KAGF,gCACGK,IAAS,SAACQ,EAAA,EAAD,CAAcC,KAAI,+CAA0CT,EAA1C,OACD,IAA1BF,EAAQY,gBAAuB,SAACF,EAAA,EAAD,CAAcC,KAAM,uCACnDX,EAAQY,cAAgB,IAAK,eAAInB,UAAWC,EAAf,SAC3BM,EAAQa,QAAQC,KAAI,SAAAC,GAAM,OACzB,eAAoBtB,UAAWC,EAA/B,UACE,SAAC,GAAD,UAAsBqB,KADfA,EAAOC,c,0MCxBbC,EAAU,mCAEhB,SAAeC,IAAtB,+B,aAAO,O,oBAAA,+GAAmCC,EAAnC,+BAA0C,EAAGC,EAA7C,+BAA0D,QAASC,EAAnE,+BAAiF,MAAjF,SACkBC,GAAAA,CAAM,yCAAD,OAA0CF,EAA1C,YAAwDC,EAAxD,oBAA+EJ,EAA/E,iBAA+FE,IADtH,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAAkCC,GAAlC,gGAAyCL,EAAzC,+BAAgD,EAAGM,EAAnD,+BAA8D,QAA9D,SACkBH,GAAAA,CAAM,qDAAD,OAAsDL,EAAtD,qBAA0EQ,EAA1E,kBAA4FD,EAA5F,iBAA0GL,IADjI,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAemB,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,8FAAwCF,EAAxC,+BAAmD,QAAnD,SACkBH,GAAAA,CAAM,sCAAD,OAAuCK,EAAvC,oBAA2DV,EAA3D,qBAA+EQ,IADtG,uBACGlB,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAeqB,EAAtB,kC,aAAO,O,oBAAA,WAAqCD,GAArC,8FAA+CF,EAA/C,+BAA0D,QAA1D,SACkBH,GAAAA,CAAM,sCAAD,OAAuCK,EAAvC,4BAAmEV,EAAnE,qBAAuFQ,IAD9G,uBACGlB,EADH,EACGA,KADH,kBAEEA,GAFF,mEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAqCsB,GAArC,gGAA+CR,EAA/C,+BAAsD,EAAGM,EAAzD,+BAAoE,QAApE,SACkBH,GAAAA,CAAM,sCAAD,OAAuCK,EAAvC,4BAAmEV,EAAnE,qBAAuFQ,EAAvF,iBAAwGN,IAD/H,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsItem/ReviewsItem.module.css?9eab","components/ReviewsItem/ReviewsItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"name\":\"ReviewsItem_name__6v5xU\",\"text\":\"ReviewsItem_text__yqhVF\",\"caption\":\"ReviewsItem_caption__VP7qo\"};","import PropTypes from 'prop-types';\nimport styles from './ReviewsItem.module.css';\n\nexport default function ReviewsItem({ author, content, created_at, updated_at }) {\n  const createdDate = new Date(created_at);\n  const modifiedDate = new Date(updated_at);\n  return (\n    <>\n      <h2 className={styles.name}>{author}</h2>\n      <p className={styles.text}>{content}</p>\n      <p className={styles.caption}>Created: {createdDate.toLocaleString()}, Last Modified: {modifiedDate.toLocaleString()}</p>\n    </>\n  );\n}\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n  updated_at: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"text\":\"Reviews_text__EqLvx\"};","import Notification from 'components/Notification';\nimport MovieReviewsItem from 'components/ReviewsItem';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsByMovieId } from 'service/api';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchReviewsByMovieId(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Notification text={`Something went wrong. Error message: ${error}.`} />}\n      {reviews.total_results === 0 && <Notification text={'No reviews available at this time.'} />}\n      {reviews.total_results > 0 && <ol className={styles.list}>\n        {reviews.results.map(review => (\n          <li key={review.id} className={styles.item}>\n            <MovieReviewsItem {...review} />\n          </li>\n        ))}\n      </ol>}\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport const API_KEY = 'fdf0e898687a376156944fbb1ab25196';\n// Запит трендових фільмів\nexport async function fetchTrendingMovies(page = 1, media_type = 'movie', time_window = 'day') {\n  const { data } = await axios(`https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=${API_KEY}&page=${page}`);\n  return data;\n}\n// Запит пошуку фільмів\nexport async function fetchMoviesByQuery(query, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=${page}`);\n  return data;\n}\n// Запит основної інформації про фільм за його ідентифікатором\nexport async function fetchMovieById(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит акторського складу та знімальної групи фільму за ідентифікатором\nexport async function fetchCreditsByMovieId(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит рецензії фільму за ідентифікатором\nexport async function fetchReviewsByMovieId(movie_id, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${language}&page=${page}`);\n  return data;\n}\n"],"names":["ReviewsItem","author","content","created_at","updated_at","createdDate","Date","modifiedDate","className","styles","toLocaleString","Reviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviewsByMovieId","then","data","catch","message","Notification","text","total_results","results","map","review","id","API_KEY","fetchTrendingMovies","page","media_type","time_window","axios","fetchMoviesByQuery","query","language","fetchMovieById","movie_id","fetchCreditsByMovieId"],"sourceRoot":""}