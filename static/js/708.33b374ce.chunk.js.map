{"version":3,"file":"static/js/708.33b374ce.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx","hooks/useSearchQuery.js","service/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nexport default function Loader() {\n  return (\n    <SpinnerDotted\n      enabled={true}\n      size='100'\n      color='#490D9A'\n      thickness='150'\n      style={{\n        display: 'block',\n        marginTop: '20',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      }}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesGallery_list__aM+SO\",\"item\":\"MoviesGallery_item__rY1Lr\",\"link\":\"MoviesGallery_link__0igYa\",\"pagination_list\":\"MoviesGallery_pagination_list__Sq6zw\",\"pagination_item\":\"MoviesGallery_pagination_item__Zhe2n\",\"pagination_active_item\":\"MoviesGallery_pagination_active_item__zUfLa\",\"disabled_item\":\"MoviesGallery_disabled_item__7RsbI\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport styles from './MoviesGallery.module.css';\n\nexport default function MoviesGallery({ movies, page, pageCount, onPageClick }) {\n  function handlePageClick(event) {\n    onPageClick(event.selected + 1);\n  }\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.map(({ id, title }) =>\n        (<li\n          key={id}\n          className={styles.item}\n        >\n          <Link to={`/movies/${id}`} className={styles.link}>\n            {title}\n          </Link>\n        </li>)\n        )}\n      </ul>\n      {pageCount > 1 && <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageCount={pageCount}\n        forcePage={page-1}\n        marginPagesDisplayed={2}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        containerClassName={styles.pagination_list}\n        pageClassName={styles.pagination_item}\n        activeClassName={styles.pagination_active_item}\n        breakClassName={styles.pagination_item}\n        previousClassName={styles.pagination_item}\n        nextClassName={styles.pagination_item}\n        disabledClassName={styles.disabled_item}\n      />}\n    </>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  page: PropTypes.number,\n  pageCount: PropTypes.number,\n  onPageClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Searchbar_overlay__0NkZ+\",\"form\":\"Searchbar_form__D-hp5\",\"button\":\"Searchbar_button__nkcjk\",\"label\":\"Searchbar_label__BRcTT\",\"input\":\"Searchbar_input__19umw\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSearchClick }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') return toast.warning('Enter search query text!');\n    onSearchClick(searchQuery);\n  };\n\n  return (\n    <div className={styles.overlay}>\n      <form\n        className={styles.form}\n        onSubmit={onSubmit}\n      >\n        <button type='submit' className={styles.button}>\n          <span className={styles.label}>Search</span>\n        </button>\n        <input\n          className={styles.input}\n          type='text'\n          name='searchQuery'\n          autoComplete='off'\n          autoFocus\n          placeholder='Search movies'\n          onChange={onChange}\n          value={searchQuery}\n        />\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSearchClick: PropTypes.func.isRequired,\n};\n","import Searchbar from 'components/Searchbar';\nimport Loader from 'components/Loader';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Notification from 'components/Notification';\nimport useSearchQuery from 'hooks/useSearchQuery';\n\nexport default function MoviesPage() {\n  const { searchParams, status, movies, error, pageCount, onSearchClick, onPageClick } = useSearchQuery();\n\n  return (\n    <>\n      <Searchbar onSearchClick={onSearchClick} />\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <Notification text={`Error getting information from server: ${error}`} />}\n      {status === 'resolved' && movies.length > 0 && <MoviesGallery\n        movies={movies}\n        page={Number(searchParams.get('page'))}\n        pageCount={pageCount}\n        onPageClick={onPageClick}\n      />}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'service/api';\nimport { toast } from 'react-toastify';\n\nexport default function useSearchQuery() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('idle');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [pageCount, setPageCount] = useState(1);\n\n  useEffect(() => {\n    if (!searchParams.get('query')) return;\n    setStatus('pending');\n    fetchMoviesByQuery(searchParams.get('query'), searchParams.get('page') || 1)\n      .then(data => {\n        if (data.total_results === 0) {\n            setError('Found 0 movies! Please, change search query.');\n            setStatus('rejected');\n            return toast.warning('Found 0 movies! Please, change search query.');\n          } else {\n            setMovies(data.results);\n            setPageCount(data.total_pages)\n            setStatus('resolved');\n          }\n        })\n        .catch(error => {\n          toast.error(error.message);\n          setError(error.message);\n          setStatus('rejected');\n        });\n    }, [searchParams]);\n\n  function onSearchClick(searchQuery) {\n    if (searchParams.get('query')) {\n      if (searchParams.get('query').toLowerCase() === searchQuery.toLowerCase()) return;\n    }\n    setMovies([]);\n    setSearchParams({\n      query: searchQuery,\n      page: 1,\n    });\n  }\n\n  function onPageClick(pageNum) {\n    setSearchParams({\n      'query': searchParams.get('query'),\n      'page': pageNum,\n    });\n  }\n\n  return { searchParams, status, movies, error, pageCount, onSearchClick, onPageClick };\n}\n","import axios from 'axios';\n\nexport const API_KEY = 'fdf0e898687a376156944fbb1ab25196';\n// Запит трендових фільмів\nexport async function fetchTrendingMovies(page = 1, media_type = 'movie', time_window = 'day') {\n  const { data } = await axios(`https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=${API_KEY}&page=${page}`);\n  return data;\n}\n// Запит пошуку фільмів\nexport async function fetchMoviesByQuery(query, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=${page}`);\n  return data;\n}\n// Запит основної інформації про фільм за його ідентифікатором\nexport async function fetchMovieById(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит акторського складу та знімальної групи фільму за ідентифікатором\nexport async function fetchCreditsByMovieId(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит рецензії фільму за ідентифікатором\nexport async function fetchReviewsByMovieId(movie_id, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${language}&page=${page}`);\n  return data;\n}\n"],"names":["Loader","SpinnerDotted","enabled","size","color","thickness","style","display","marginTop","marginLeft","marginRight","MoviesGallery","movies","page","pageCount","onPageClick","className","styles","map","id","title","to","breakLabel","nextLabel","onPageChange","event","selected","forcePage","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","activeClassName","breakClassName","previousClassName","nextClassName","disabledClassName","Searchbar","onSearchClick","useState","searchQuery","setSearchQuery","onSubmit","preventDefault","trim","toast","type","name","autoComplete","autoFocus","placeholder","onChange","target","value","MoviesPage","useSearchParams","searchParams","setSearchParams","status","setStatus","setMovies","error","setError","setPageCount","useEffect","get","fetchMoviesByQuery","then","data","total_results","results","total_pages","catch","message","toLowerCase","query","pageNum","useSearchQuery","Notification","text","length","Number","API_KEY","fetchTrendingMovies","media_type","time_window","axios","language","fetchMovieById","movie_id","fetchCreditsByMovieId","fetchReviewsByMovieId"],"sourceRoot":""}