{"version":3,"file":"static/js/547.e2d1c7ea.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","pages/HomePage.jsx","hooks/useFetchTrending.js","service/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nexport default function Loader() {\n  return (\n    <SpinnerDotted\n      enabled={true}\n      size='100'\n      color='#490D9A'\n      thickness='150'\n      style={{\n        display: 'block',\n        marginTop: '20',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      }}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesGallery_list__aM+SO\",\"item\":\"MoviesGallery_item__rY1Lr\",\"link\":\"MoviesGallery_link__0igYa\",\"pagination_list\":\"MoviesGallery_pagination_list__Sq6zw\",\"pagination_item\":\"MoviesGallery_pagination_item__Zhe2n\",\"pagination_active_item\":\"MoviesGallery_pagination_active_item__zUfLa\",\"disabled_item\":\"MoviesGallery_disabled_item__7RsbI\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport styles from './MoviesGallery.module.css';\n\nexport default function MoviesGallery({ movies, page, pageCount, onPageClick }) {\n  const location = useLocation();\n\n  function handlePageClick(event) {\n    onPageClick(event.selected + 1);\n  }\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.map(({ id, title }) =>\n        (<li\n          key={id}\n          className={styles.item}\n        >\n          <Link to={`/movies/${id}`} state={{ 'from': location }} className={styles.link}>\n            {title}\n          </Link>\n        </li>)\n        )}\n      </ul>\n      {pageCount > 1 && <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageCount={pageCount}\n        forcePage={page-1}\n        marginPagesDisplayed={2}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        containerClassName={styles.pagination_list}\n        pageClassName={styles.pagination_item}\n        activeClassName={styles.pagination_active_item}\n        breakClassName={styles.pagination_item}\n        previousClassName={styles.pagination_item}\n        nextClassName={styles.pagination_item}\n        disabledClassName={styles.disabled_item}\n      />}\n    </>\n  );\n}\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  page: PropTypes.number,\n  pageCount: PropTypes.number,\n  onPageClick: PropTypes.func,\n};\n","import MoviesGallery from 'components/MoviesGallery';\nimport Loader from 'components/Loader';\nimport Notification from 'components/Notification';\nimport useFetchTrending from 'hooks/useFetchTrending';\n\nexport default function HomePage() {\n  const { status, movies, error } = useFetchTrending();\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <Notification text={`Error getting information from server: ${error}`}/>}\n      {status === 'resolved' && movies.length > 0 && <MoviesGallery movies={movies} />}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'service/api';\nimport { toast } from 'react-toastify';\n\nexport default function useFetchTrending() {\n  const [status, setStatus] = useState('idle');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchTrendingMovies(1)\n      .then(data => {\n        if (data.total_results === 0) {\n          return toast.warning('Found 0 trending movies! Please, try again later.');\n        } else {\n          setMovies(data.results);\n          setStatus('resolved');\n        }\n      })\n      .catch(error => {\n        toast.error(error.message);\n        setError(error.message);\n        setStatus('rejected');\n      });\n  }, []);\n\n  return {status, movies, error};\n}\n","import axios from 'axios';\n\nexport const API_KEY = 'fdf0e898687a376156944fbb1ab25196';\n// Запит трендових фільмів\nexport async function fetchTrendingMovies(page = 1, media_type = 'movie', time_window = 'day') {\n  const { data } = await axios(`https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=${API_KEY}&page=${page}`);\n  return data;\n}\n// Запит пошуку фільмів\nexport async function fetchMoviesByQuery(query, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=${page}`);\n  return data;\n}\n// Запит основної інформації про фільм за його ідентифікатором\nexport async function fetchMovieById(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит акторського складу та знімальної групи фільму за ідентифікатором\nexport async function fetchCreditsByMovieId(movie_id, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=${language}`);\n  return data;\n}\n// Запит рецензії фільму за ідентифікатором\nexport async function fetchReviewsByMovieId(movie_id, page = 1, language = 'en-US') {\n  const { data } = await axios(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${language}&page=${page}`);\n  return data;\n}\n"],"names":["Loader","SpinnerDotted","enabled","size","color","thickness","style","display","marginTop","marginLeft","marginRight","MoviesGallery","movies","page","pageCount","onPageClick","location","useLocation","className","styles","map","id","title","to","state","breakLabel","nextLabel","onPageChange","event","selected","forcePage","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","activeClassName","breakClassName","previousClassName","nextClassName","disabledClassName","HomePage","useState","status","setStatus","setMovies","error","setError","useEffect","fetchTrendingMovies","then","data","total_results","toast","results","catch","message","useFetchTrending","Notification","text","length","API_KEY","media_type","time_window","axios","fetchMoviesByQuery","query","language","fetchMovieById","movie_id","fetchCreditsByMovieId","fetchReviewsByMovieId"],"sourceRoot":""}